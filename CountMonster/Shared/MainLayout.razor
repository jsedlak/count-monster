@inherits LayoutComponentBase
@inject ILocalStorageService Storage
@inject AppStateManager AppState
@inject IApplicationInsights AppInsights

<div class="page">
    <div class="relative dark:bg-gray-700 p-3">
        <div class="flex justify-between items-center">
            <div class="flex justify-start mr-4">
                <span class="text-white type-monster">Count Monster</span>
            </div>

            @*<nav class="flex flex-grow">
                <a class="p-2 rounded dark:border-gray-800 dark:bg-gray-800" href="/">Dashboard</a>
                </nav>*@

            <nav class="flex items-center">
                <div class="text-white mx-3 cursor-pointer py-3 px-4 dark:bg-gray-600 rounded">
                    @(_timeDelta.ToString("hh\\:mm\\:ss\\.fff"))
                    <a @onclick="@(async () => { AppState.TimerBase = DateTimeOffset.Now; StateHasChanged(); })">
                        <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                        </svg>
                    </a>
                </div>
                <a class="text-white mx-3 cursor-pointer" @onclick="OnAddCardClicked">
                    <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                </a>
                <a class="text-white mx-3 cursor-pointer" @onclick="@(() => { _isInfoSlideOpen = true; })">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                </a>
                @*<a class="text-white mx-3 cursor-pointer" >
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    </a>
                    <a class="text-white mx-3 cursor-pointer" href="/settings">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                    </a>*@
            </nav>
        </div>

    </div>
    <main>
        @Body
    </main>
</div>

@if (_isInfoSlideOpen)
{
    <Slide Title="Info & Support" CloseRequested="@(() => { _isInfoSlideOpen = false; })">
        <FormContent>
            <p>Looking for help? Please join my discord and look for the #count-monster channel.</p>
            <a href="https://discord.gg/ejB7YMm" class="w-full block my-3 bg-discord p-5 text-white rounded">
                <img class="inline-block" width="24" src="/img/discord-brands.svg" />
                Discord
            </a>

            <p class="mt-10">
                Looking to support my work and help keep the servers alive? Consider subscribing to my twitch, or donating.
            </p>

            <a href="https://twitch.tv/krisc119" class="w-full block my-3 bg-twitch p-5 text-white rounded">
                <img width="24" src="/img/twitch-brands.svg" class="inline-block text-white" />
                Twitch
            </a>

            <a href="https://www.buymeacoffee.com/johnsedlak" class="w-full block my-3 bg-brand p-5 text-white rounded">
                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Buy Me A Coffee (Donate)
            </a>

        </FormContent>
    </Slide>
}

@code {
    private TimeSpan _timeDelta = TimeSpan.FromSeconds(0);
    private Timer _timer;
    private bool _isInfoSlideOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await AppState.InitializeAsync();

        _timer = new Timer((object? stateInfo) =>
        {
            _timeDelta = DateTimeOffset.Now - AppState.TimerBase;
            StateHasChanged();
        }, new AutoResetEvent(false), 16, 16);
    }


    private async void OnAddCardClicked()
    {
        var title = $"Untitled {Guid.NewGuid().ToString().Substring(0, 8)}";
        var newCard = new TrackedItem { Title = title, Key = title.Slugify() };

        AppState.TrackedItems = AppState.TrackedItems.Union(new[] { newCard });
        await AppState.SaveAsync();

        await AppInsights.TrackEvent("MainLayout.AddCounter", new Dictionary<string, object?> { { "source", "MainLayout" } });
    }
}