<!-- This example requires Tailwind CSS v2.0+ -->
<div class=@($"{GetCssClass()} fixed z-10 inset-0 overflow-y-auto") aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!--
          Background overlay, show/hide based on modal state.

          Entering: "ease-out duration-300"
            From: "opacity-0"
            To: "opacity-100"
          Leaving: "ease-in duration-200"
            From: "opacity-100"
            To: "opacity-0"
        -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <!-- This element is to trick the browser into centering the modal contents. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <!--
          Modal panel, show/hide based on modal state.

          Entering: "ease-out duration-300"
            From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
            To: "opacity-100 translate-y-0 sm:scale-100"
          Leaving: "ease-in duration-200"
            From: "opacity-100 translate-y-0 sm:scale-100"
            To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        -->
        <div class="inline-block align-bottom dark:bg-gray-700 dark:text-white bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle max-w-4xl sm:w-full">
            <div class="dark:bg-gray-700 dark:text-white bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="flex py-3">
                    <div>
                        @Icon
                    </div>
                    <h3 class="flex-grow text-lg leading-6 font-medium dark:text-white text-gray-900">
                        @Title
                    </h3>
                    <div>
                        <a @onclick="@(async () => { await CloseRequested.InvokeAsync(); })" class="cursor-pointer text-gray-500">
                            <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </a>
                    </div>
                </div>
                <div class="mt-2">
                    @Content
                </div>
            </div>
            @if (Footer != null)
            {
                <div class="dark:bg-gray-800 bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                    @Footer
            </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment Icon { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    [Parameter]
    public RenderFragment Content { get; set; }

    [Parameter]
    public EventCallback CloseRequested { get; set; }

    [Parameter]
    public bool IsOpen { get; set; } = false;

    private string GetCssClass()
    {
        return IsOpen ? "block" : "hidden";
    }
}